# 제목은 최대 50글자까지 아래에 작성: ex) feat: 로그인 페이지 - 기능 구현

# 본문은 아래에 작성  

# 꼬릿말은 아래에 작성: ex) Github issue #23  

# --- COMMIT END ---  
#   <타입> 리스트  
#   Feat        : 기능 추가, 삭제, 변경
#   Fix          : 버그, 오류 수정
#   Docs        : README.md, json 파일 등 수정, 라이브러리 설치 (문서 관련, 코드 리팩토링) 
#   Style       : CSS 등 사용자 UI 디자인 변경 (제품 코드 수정 발생, 코드 형식, 정렬 등의 변경)
#   Refactor    : 코드 리팩토링  
#   Test        : 테스트 코드 추가, 삭제, 변경 등 (코드 수정 없음, 테스트 코드에 관련된 모든 변경에 해당)
#   Config       : npm 모듈 설치 등
#   Chore       : 패키지 매니저 설정할 경우, etc 등 (ex. gitignore)
#   Comment     : 필요한 주석 추가 및 변경  
#   Rename      : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 한 경우  
#   Remove      : 파일을 삭제하는 작업만 수행한 경우  
#   Init        : 초기 환경 설정
#   Sync        : 팀원들과 동기화
#   Deploy      : 배포
#   Assets      : 사진 파일 추가 한 경우

# ------------------   
#   본문은 "방법(어떻게)" 보다 "설명(무엇을)", "이유(왜)"를 설명한다. 
#   본문에 여러줄의 메시지를 작성할 땐 "-"로 구분

#   <꼬리말>  
#   필수가 아닌 optioanl  
#   Fixes        :이슈 수정중 (아직 해결되지 않은 경우)  
#   Resolves     : 이슈 해결했을 때 사용  
#   Ref          : 참고할 이슈가 있을 때 사용  
#   Related to   : 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)  
#   ex) Fixes: #47 Related to: #32, #21  